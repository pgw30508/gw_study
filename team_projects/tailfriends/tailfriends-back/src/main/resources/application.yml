spring:
  #  profiles:
#    active: local

  application:
    name: tailfriend

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

  session:
    redis:
      namespace: spring:session



  datasource:
    url: jdbc:mysql://db-33p2cg-kr.vpc-pub-cdb.ntruss.com/tailfriends?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 30000
      max-lifetime: 1800000
      connection-timeout: 3000

  servlet:
    multipart:
      max-file-size: 500MB
      max-request-size: 500MB


  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        jdbc:
          batch_size: 50
        format_sql: false
        dialect: org.hibernate.dialect.MySQLDialect
        order_inserts: true
        order_updates: true

  rabbitmq:
    host: tailfreinds-notify-n89pl.kr.vrmq.naverncp.com
    port: 5672
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  security:
    oauth2:
      client:
        registration:
          kakao:
            authorization-grant-type: authorization_code
            client-id: ${KAKAO_CLIENT_ID}
            redirect-uri: "${baseUrl}/api/login/oauth2/code/kakao"
            scope:
              - account_email
            client-authentication-method: client_secret_post
            client-name: Kakao

          naver:
            authorization-grant-type: authorization_code
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: "${baseUrl}/api/login/oauth2/code/naver"
            scope:
              - account_email
            client-authentication-method: client_secret_post
            client-name: Naver

          google:
            authorization-grant-type: authorization_code
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "${baseUrl}/api/login/oauth2/code/google"
            scope:
              - email
            client-authentication-method: client_secret_post
            client-name: Google

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${DB_PASSWORD}
jwt:
  secret: ${JWT_SECRET}
  token-validity: 86400

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    tf.tailfriend.user.controller: DEBUG
    org.springframework.web: DEBUG
    org.springframework.http.converter.json: DEBUG
    tf.tailfriend.notification.scheduler.NotificationScheduler: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

URL: ${baseUrl}

ncp:
  end-point: ${NCP_END_POINT}
  region-name: ${NCP_REGION_NAME}
  access-key: ${NCR_USERNAME}
  secret-key: ${NCR_PASSWORD}
  bucket-name: ${NCP_BUCKET_NAME}


firebase:
  credentials:
    type: "service_account"
    project_id: "${FIREBASE_PROJECT_ID}"
    private_key_id: "${FIREBASE_PRIVATE_KEY_ID}"
    private_key: "${FIREBASE_PRIVATE_KEY}"
    client_email: "${FIREBASE_CLIENT_EMAIL}"
    client_id: "${FIREBASE_CLIENT_ID}"
    auth_uri: "${FIREBASE_AUTH_URI}"
    token_uri: "${FIREBASE_TOKEN_URI}"
    auth_provider_x509_cert_url: "${FIREBASE_AUTH_PROVIDER_X509_CERT_URL}"
    client_x509_cert_url: "${FIREBASE_CLIENT_X509_CERT_URL}"
    universe_domain: "googleapis.com"


